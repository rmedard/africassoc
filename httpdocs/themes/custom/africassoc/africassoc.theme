<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Markup;
use Drupal\Core\StringTranslation\PluralTranslatableMarkup;
use Drupal\datetime\Plugin\Field\FieldType\DateTimeItemInterface;
use Drupal\node\Entity\Node;
use Drupal\views\Plugin\views\field\EntityField;
use Drupal\views\ResultRow;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function africassoc_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
}

function africassoc_preprocess_views_view_field(&$variables) {
  $field = $variables['field'];
  $view = $variables['view'];
  if ($field instanceof EntityField and $field->field == 'title') {
    if ($view instanceof ViewExecutable and $view->current_display == 'page_member_associations') {
      $row = $variables['row'];
      if ($row instanceof ResultRow) {
        $assoc = $row->_entity;
        try {
          $now = new DateTime('now', new DateTimeZone(date_default_timezone_get()));
          $count = Drupal::entityQuery('node')->condition('type', 'event')
            ->condition('field_event_organizer_assoc.target_id', $assoc->id())
            ->condition('status', Node::PUBLISHED)
            ->condition('field_event_date', $now->format(DateTimeItemInterface::DATETIME_STORAGE_FORMAT), '>=')
            ->count()->execute();
          $upcomingEventsCount = intval($count) == 0 ? t('No events') : $count . ' ' . new PluralTranslatableMarkup($count, 'event', 'events');
          $assoc_url = Drupal::service('path.alias_manager')
            ->getAliasByPath('/' . $assoc->toUrl('canonical')
                ->getInternalPath(), $assoc->language()->getId());
          $variables['output'] = Markup::create('<h5><a href="' . $assoc_url . '" hreflang="' . $assoc->language()
              ->getId() . '">' . $assoc->label() . '</a><small class="badge badge-pill badge-primary float-right">' . $upcomingEventsCount . '</small></h5>');
        } catch (Exception $e) {
          Drupal::logger('Africassoc Theme')
            ->error('Association ID: ' . $assoc->id() . ' | Error: ' . $e->getMessage());
        }
      }
    }
  }
}

function africassoc_preprocess_page_title(&$variables) {
  if (Drupal::routeMatch()->getRouteName() == 'view.events.agenda') {
    $buttonText = t('Display your event for free');
    $variables['title']['#markup'] = Markup::create('<h1 class="js-quickedit-page-title title">Events <small class="float-right"><a href="#" class="btn btn-primary btn-sm" role="button"><i class="fas fa-plus-circle"></i> '. $buttonText .'</a></small></h1>');
  }
}
